name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2
      - uses: psf/black@20.8b1

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11-dev', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # The GitHub editor is 127 chars wide
          #flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install .
          pytest --cov=gcp_storage_emulator --cov-report=xml tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          flags: unittests

  docker:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-x-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-x-${{ matrix.arch }}-
      - name: Build
        uses: docker/build-push-action@v2.7.0
        with:
          platforms: ${{ matrix.arch }}
          push: false
          load: true
          tags: oittaa/gcp-storage-emulator:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Docker container up
        run: docker run -d --rm -p 8080:8080 --name gcp-storage-emulator oittaa/gcp-storage-emulator
      - name: Wait 10 seconds
        run: sleep 10
      - name: Check running containers
        run: docker ps -a
      - name: Check the container reachability
        run: curl -s --retry 10 --retry-connrefused http://localhost:8080/
      - name: Check Docker logs
        run: docker logs gcp-storage-emulator
      - name: Docker container down
        run: docker stop gcp-storage-emulator

  publish:
    if: ${{ github.event_name == 'push' }}
    needs: [lint, build, docker]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-x-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-x-
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.7.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: oittaa/gcp-storage-emulator:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
